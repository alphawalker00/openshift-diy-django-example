#!/bin/bash
# This deploy hook gets executed after dependencies are resolved and the
# build hook has been run but before the application has been started back
# up again.  This script gets executed directly, so it could be python, php,
# ruby, etc.

# [re-]create virtualenv

VIRTUALENV_DIR="${OPENSHIFT_DATA_DIR}venv"
rm -rf ${VIRTUALENV_DIR}
virtualenv ${VIRTUALENV_DIR}

# activate virtualenv and install dependencies

source ${VIRTUALENV_DIR}/bin/activate
export PIP_DOWNLOAD_CACHE=${OPENSHIFT_TMP_DIR}.pip/cache
pip install --log=${OPENSHIFT_TMP_DIR}.pip/pip.log -r ${OPENSHIFT_REPO_DIR}requirements.txt

# boot django database setup and static file collection

export DJANGO_SETTINGS_MODULE="petstore.settings_openshift"

echo "Executing 'python ${OPENSHIFT_REPO_DIR}manage.py syncdb --noinput'"
python ${OPENSHIFT_REPO_DIR}manage.py syncdb --noinput

echo "Executing 'python ${OPENSHIFT_REPO_DIR}manage.py migrate'"
python ${OPENSHIFT_REPO_DIR}manage.py migrate

# prepare Django asset support

mkdir -p ${OPENSHIFT_DATA_DIR}site_media/
mkdir -p ${OPENSHIFT_DATA_DIR}site_static/

echo "Executing 'python ${OPENSHIFT_REPO_DIR}manage.py collectstatic --clear --noinput'"
python ${OPENSHIFT_REPO_DIR}manage.py collectstatic --clear --noinput
